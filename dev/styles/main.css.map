{"version":3,"sources":["../node_modules/super-gigi/dist/helpers/_normalize.scss","../node_modules/super-gigi/dist/helpers/_functions.scss","styles/4-base/partials/_icons.scss","styles/4-base/partials/_sprites.scss"],"names":[],"mappings":"AAcA;EACE,2BAA2B;EAC3B,+BAA+B;EAC/B,gBCAa,EDCd;;AAED;EACE,UAAU;EACV,mCAAmC;EACnC,oCAAoC,EACrC;;AAED;;;EAGE,uBAAuB,EACxB;;AAED;;;;;;;;;EASE,UAAU;EACV,WAAW,EACZ;;AAED;;EAEE,eAAe,EAChB;;AAED;;;;EAIE,mBAAmB,EACpB;;AAED;EACE,kBAAkB,EACnB;;AAED;;EAEE,eAAe;EACf,yBAAiB;EAAjB,iBAAiB,EAClB;;AAED;EACE,sBAAsB,EACvB;;AAED;EACE,kBAAkB;EAClB,UAAU;EACV,cAAc;EACd,gCAAgC;EAChC,wBAAwB;EACxB,iBAAiB;EACjB,gBAAgB,EACjB;;AAED;EACE,WAAW;EACX,UAAU,EACX;;AAED;EACE,WAAW,EACZ;;AAED;EACE,gBAAgB;EAChB,aAAa;EACb,UAAU;EAGV,gBAAgB,EACjB;;AAED;EACE,iBAAiB,EAClB;;AAED;;;;;EAKE,eAAe;EACf,cAAc;EACd,UAAU,EACX;;AAED;EACE,kBAAkB,EACnB;;AAED;;EAEE,qBAAqB,EACtB;;AAED;;;;EAIE,2BAA2B;EAC3B,gBAAgB,EACjB;;AAED;;EAEE,gBAAgB,EACjB;;AAED;;EAEE,UAAU;EACV,WAAW,EACZ;;AAED;EACE,oBAAoB,EACrB;;AAED;;EAEE,WAAW,EACZ;;AAED;;EAEE,aAAa,EACd;;AAED;EACE,8BAA8B,EAC/B;;AAED;;EAEE,yBAAyB,EAC1B;;AAED;EACE,0BAA0B;EAC1B,cAAc;EACd,+BAA+B,EAChC;;AAED;EACE,UAAU;EACV,WAAW,EACZ;;AAED;EACE,eAAe,EAChB;;AEjLD;EACE,sBAAsB;EACtB,mBAAmB;EACnB,oBAAoB;EACpB,iCAAQ,EAAA;;AAGV;EACE,sBAAsB;EACtB,sBAAsB;EACtB,mCAAmC;EACnC,oCAAoC;EACpC,mBAAmB;EACnB,oBAAoB;EACpB,eAAe,EAChB;;AAED;EACE,gCAAgC;EAChC,mBAAmB;EACnB,qBAAqB,EACtB;;AAED;EAAc,eAAe,EAAI;;AACjC;EAAc,eAAe,EAAI;;AACjC;EAAc,eAAe,EAAI;;AACjC;EAAc,eAAe,EAAI;;AACjC;EACE,mBAAmB;EACnB,4BAA4B,EAC7B;;AAED;EAAyB,iBAAiB,EAAI;;AAC9C;EAAyB,iBAAiB,EAAI;;AAC9C;EAAuB,iBAAiB,EAAI;;AAC5C;EAAuB,iBAAiB,EAAI;;AAC5C;EAAuB,iBAAiB,EAAI;;AAC5C;EAAuB,iBAAiB,EAAI;;ACrC5C;;;;;;;;;;;;EAYE;AAkCF;;;;EAIE;AAKF;;;;;;;;;;EAUE;AA2BF;;;;;;;;;;;EAWE;AAmBF;;;;;EAKE;AAUF;;;;;EAKE","file":"styles/main.css","sourcesContent":["// -----------------------------------------------------------------------------\n// Super GiGi not come with a real normalize file. It's not in our scope.\n// It is a grid system alone, probably you already import a normalize/reset\n// library in your project, or you simply don't need it.\n// Anyway for demo, testing etc, we must have a little normalize file, to\n// see if everything is in the right place.\n// That is this file. Feel free to use it or import it, but with this points\n// in mind.\n// The following code is a little mashup of a lot of things we have around.\n// The main referencence however:\n// https://necolas.github.io/normalize.css/\n// http://jaydenseric.com/blog/forget-normalize-or-resets-lay-your-own-css-foundation\n// -----------------------------------------------------------------------------\n\nhtml {\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  font-size: $rem-base;\n}\n\nbody {\n  margin: 0;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: border-box;\n}\n\nh1,\nh2,\nh3,\nh4,\np,\nblockquote,\nfigure,\nol,\nul {\n  margin: 0;\n  padding: 0;\n}\n\nmain,\nli {\n  display: block;\n}\n\nh1,\nh2,\nh3,\nh4 {\n  font-size: inherit;\n}\n\nstrong {\n  font-weight: bold;\n}\n\na,\nbutton {\n  color: inherit;\n  transition: 0.3s;\n}\n\na {\n  text-decoration: none;\n}\n\nbutton {\n  overflow: visible;\n  border: 0;\n  font: inherit;\n  -webkit-font-smoothing: inherit;\n  letter-spacing: inherit;\n  background: none;\n  cursor: pointer;\n}\n\n::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\n\nfocus {\n  outline: 0;\n};\n\nimg {\n  max-width: 100%;\n  height: auto;\n  border: 0;\n\n  // ie 11 bug fix\n  min-height: 2px;\n}\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit;\n  font: inherit;\n  margin: 0;\n}\n\nbutton {\n  overflow: visible;\n}\n\nbutton,\nselect {\n  text-transform: none;\n}\n\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button;\n  cursor: pointer;\n}\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\ninput {\n  line-height: normal;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  padding: 0;\n}\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield;\n}\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\nlegend {\n  border: 0;\n  padding: 0;\n}\n\ntextarea {\n  overflow: auto;\n}\n","// - REMOVE THE UNIT FROM A VALUE. BASED ON ZURB FOUNDATION\n@function remove-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n// - TRANSFORM AN ARRAY OF PX VALUES (with or without px value) in rem unit - //\n\n// - EXAMPLES\n//\n//  width: rem-calc(16 8 16 8)\n//  will return\n//  width: 1rem 0.5rem 1rem 0.5rem\n//\n//  width: rem-calc(8)\n//  will return\n//  width: 1rem\n\n$rem-base: 16px !default;\n$design-base: $rem-base !default;\n\n@function rem-calc($values, $base-value: $design-base) {\n  @if length($values) == 1 {\n    @return remove-unit($values) / remove-unit($base-value) * 1rem;\n  } @else {\n    // empty array that we will return\n    $rem-values: ();\n\n    @each $value in $values {\n      $rem-values: append($rem-values, remove-unit($value) / remove-unit($base-value) * 1rem);\n    }\n\n    @return $rem-values;\n  }\n}\n\n// - TRANSFORM AN ARRAY OF PX VALUES (with or without px value) in em unit - //\n\n@function em-calc($values, $base-value: $design-base) {\n  @if length($values) == 1 {\n    @return remove-unit($values) / remove-unit($base-value) * 1em;\n  } @else {\n    // empty array that we will return\n    $em-values: ();\n\n    @each $value in $values {\n      $em-values: append($em-values, remove-unit($value) / remove-unit($base-value) * 1em);\n    }\n\n    @return $em-values;\n  }\n}\n\n// - TRANSFORM AN ARRAY OF EM VALUES (with or without em value) in px unit - //\n@function px-calc($values, $base-value: $design-base) {\n  @if length($values) == 1 {\n    @return remove-unit($values) * remove-unit($base-value) * 1px;\n  } @else {\n    // empty array that we will return\n    $px-values: ();\n\n    @each $value in $values {\n      $px-values: append($px-values, remove-unit($value) * remove-unit($base-value) * 1px);\n    }\n\n    @return $px-values;\n  }\n}\n","@font-face {\n  font-family: 'OwFont';\n  font-style: normal;\n  font-weight: normal;\n  src: url('../fonts/OwFont.woff');\n}\n\n.OwIcon:before {\n  display: inline-block;\n  font-family: 'OwFont';\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-style: normal;\n  font-weight: normal;\n  line-height: 1;\n}\n\n.OwIcon--lg {\n  font-size: 1.3333333333333333em;\n  line-height: .75em;\n  vertical-align: -15%;\n}\n\n.OwIcon--2x { font-size: 2em; }\n.OwIcon--3x { font-size: 3em; }\n.OwIcon--4x { font-size: 4em; }\n.OwIcon--5x { font-size: 5em; }\n.OwIcon--fw {\n  text-align: center;\n  width: 1.2857142857142858em;\n}\n\n.OwIcon--burger:before { content: '\\EA01'; }\n.OwIcon--wallet:before { content: '\\EA02'; }\n.OwIcon--dots:before { content: '\\EA03'; }\n.OwIcon--bell:before { content: '\\EA04'; }\n.OwIcon--chat:before { content: '\\EA05'; }\n.OwIcon--grid:before { content: '\\EA06'; }\n","/*\nSCSS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: $icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n$icon-home: x y offset_x offset_y width height total_width total_height image_path;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n$spritesheet: width height image $spritesheet-sprites;\n*/\n$logo-ow-name: 'logo-ow';\n$logo-ow-x: 0px;\n$logo-ow-y: 0px;\n$logo-ow-offset-x: 0px;\n$logo-ow-offset-y: 0px;\n$logo-ow-width: 150px;\n$logo-ow-height: 150px;\n$logo-ow-total-width: 150px;\n$logo-ow-total-height: 150px;\n$logo-ow-image: 'sprite.png';\n$logo-ow: (0px, 0px, 0px, 0px, 150px, 150px, 150px, 150px, 'sprite.png', 'logo-ow', );\n$logo-ow-2x-name: 'logo-ow_2x';\n$logo-ow-2x-x: 0px;\n$logo-ow-2x-y: 0px;\n$logo-ow-2x-offset-x: 0px;\n$logo-ow-2x-offset-y: 0px;\n$logo-ow-2x-width: 300px;\n$logo-ow-2x-height: 300px;\n$logo-ow-2x-total-width: 300px;\n$logo-ow-2x-total-height: 300px;\n$logo-ow-2x-image: 'sprite_2x.png';\n$logo-ow-2x: (0px, 0px, 0px, 0px, 300px, 300px, 300px, 300px, 'sprite_2x.png', 'logo-ow_2x', );\n$images-width: 150px;\n$images-height: 150px;\n$images-image: 'sprite.png';\n$images-sprites: ($logo-ow, );\n$images: (150px, 150px, 'sprite.png', $images-sprites, );\n$retina-spritesheet-width: 300px;\n$retina-spritesheet-height: 300px;\n$retina-spritesheet-image: 'sprite_2x.png';\n$retina-spritesheet-sprites: ($logo-ow-2x, );\n$retina-spritesheet: (300px, 300px, 'sprite_2x.png', $retina-spritesheet-sprites, );\n\n/*\nThese \"retina group\" variables are mappings for the naming and pairing of normal and retina sprites.\n\nThe list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.\n*/\n$logo-ow-group-name: 'logo-ow';\n$logo-ow-group: ('logo-ow', $logo-ow, $logo-ow-2x, );\n$retina-groups: ($logo-ow-group, );\n\n/*\nThe provided mixins are intended to be used with the array-like variables\n\n.icon-home {\n  @include sprite-width($icon-home);\n}\n\n.icon-email {\n  @include sprite($icon-email);\n}\n*/\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n/*\nThe `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.\n  It should be used with a \"retina group\" variable.\n\nThe media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/\n\n$icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );\n\n.icon-home {\n  @include retina-sprite($icon-home-group);\n}\n*/\n@mixin sprite-background-size($sprite) {\n  $sprite-total-width: nth($sprite, 7);\n  $sprite-total-height: nth($sprite, 8);\n  background-size: $sprite-total-width $sprite-total-height;\n}\n\n@mixin retina-sprite($retina-group) {\n  $normal-sprite: nth($retina-group, 2);\n  $retina-sprite: nth($retina-group, 3);\n  @include sprite($normal-sprite);\n\n  @media (-webkit-min-device-pixel-ratio: 2),\n         (min-resolution: 192dpi) {\n    @include sprite-image($retina-sprite);\n    @include sprite-background-size($normal-sprite);\n  }\n}\n\n/*\nThe `sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of SCSS\n\n@include sprites($spritesheet-sprites);\n*/\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n\n/*\nThe `retina-sprites` mixin generates a CSS rule and media query for retina groups\n  This yields the same output as CSS retina template but can be overridden in SCSS\n\n@include retina-sprites($retina-groups);\n*/\n@mixin retina-sprites($retina-groups) {\n  @each $retina-group in $retina-groups {\n    $sprite-name: nth($retina-group, 1);\n    .#{$sprite-name} {\n      @include retina-sprite($retina-group);\n    }\n  }\n}\n"],"sourceRoot":"/source/"}